# CocoaPods analytics disabled
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

platform :ios, '13.0'

project 'Runner', 'Debug' => :debug, 'Profile' => :release, 'Release' => :release

# --- Robust FLUTTER_ROOT discovery (works on Codemagic) ---
def locate_flutter_root
  fr = ENV['FLUTTER_ROOT']
  return fr unless fr.nil? || fr.empty?

  begin
    json = `flutter --version --machine 2>/dev/null`
    m = json.match(/"flutterRoot":"([^"]+)"/)
    return m[1] if m
  rescue
  end

  generated = File.expand_path(File.join(__dir__, 'Flutter', 'Generated.xcconfig'))
  if File.exist?(generated)
    File.foreach(generated) do |line|
      m = line.match(/FLUTTER_ROOT=(.*)/)
      return m[1].strip if m
    end
  end

  nil
end

flutter_root = locate_flutter_root
abort('❌ FLUTTER_ROOT not found. Ensure Flutter is on PATH and run "flutter pub get".') \
  if flutter_root.nil? || flutter_root.empty?

# ✅ Load Flutter's official CocoaPods helper (correct path)
require File.expand_path('packages/flutter_tools/bin/podhelper', flutter_root)

# --- Standard Flutter iOS setup ---
flutter_ios_podfile_setup

target 'Runner' do
  # Do NOT add `use_frameworks!` unless required by a plugin.
  flutter_install_all_ios_pods(File.dirname(File.realpath(__FILE__)))
end

# --- FIX: Safe post_install block for CocoaPods 1.16.x compatibility ---
post_install do |installer|
  begin
    flutter_additional_ios_build_settings(installer)
  rescue NoMethodError => e
    puts "⚠️  Skipping Flutter post-install patch: #{e.message}"
  end
end
